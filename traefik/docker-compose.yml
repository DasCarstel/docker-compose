services:

  ### TRAEFIK ###

  traefik:
    image: traefik:latest
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      internal:
      proxy:
        ipv4_address: 192.168.80.80 # static ip for homeassistant use -> big last number to get this ip every time
    ports:
      - 80:80
      - 81:81 # external http
      - 443:443
      - 444:444 # external https
      - 8282:8080 # Traefik Dashboard
    environment:
    - CF_DNS_API_TOKEN=${CF_DNS_API_TOKEN}
    #- CF_API_KEY=
    #- CF_API_EMAIL=
    # be sure to use the correct one depending on if you are using a token or key
    # https://go-acme.github.io/lego/dns/cloudflare/
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/docker/traefik/traefik.yml:/traefik.yml:ro
      - /etc/docker/traefik/acme.json:/acme.json
      - /etc/docker/traefik/config.yml:/config.yml:ro
      - /etc/docker/traefik/logs:/var/log/traefik
      - /etc/docker/traefik/rules:/rules # https://doc.traefik.io/traefik/providers/file/#directory copy for this rule usecase https://www.smarthomebeginner.com/traefik-docker-compose-guide-2022/
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=http" # restricts dashboard to internal entrypoint
      - "traefik.http.routers.traefik.rule=Host(`traefik.mueller-nas.de`)" # if you want a internal domain, get the wildcard cert for it and then choos traefik-dashboard.home.yourdomain.co.uk or what you want
      - "traefik.http.middlewares.traefik-auth.basicauth.users=admin:$$2y$$05$$8EOJC.0pMIpxzhfopLXMeePZgnp8dU78pFvr6b/RY67t0cd8PCYgW"
      - "traefik.http.middlewares.traefik-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.routers.traefik.middlewares=traefik-https-redirect"
      - "traefik.http.routers.traefik-secure.entrypoints=https"
      - "traefik.http.routers.traefik-secure.rule=Host(`traefik.mueller-nas.de`)" # if you want a internal domain, get the wildcard cert for it and then choos traefik-dashboard.home.yourdomain.co.uk or what you want
      - "traefik.http.routers.traefik-secure.middlewares=traefik-auth"
      - "traefik.http.routers.traefik-secure.tls=true"
      - "traefik.http.routers.traefik-secure.tls.certresolver=cloudflare"
      - "traefik.http.routers.traefik-secure.tls.domains[0].main=mueller-nas.de" #if you use the .home.yourdomain.co.uk entry you have to change the [0] into [1]
      - "traefik.http.routers.traefik-secure.tls.domains[0].sans=*.mueller-nas.de" # same here, change 0 to 1
      #- "traefik.http.routers.traefik-secure.tls.domains[0].main=nas.mueller-nas.de" # If you want *.home.yourdomain.co.uk subdomain or something else, you have to get the certifcates at first
      #- "traefik.http.routers.traefik-secure.tls.domains[0].sans=*.nas.mueller-nas.de" # get a wildcard certificat for your .home.yourdomain.co.uk
      - "traefik.http.routers.traefik-secure.service=api@internal"

  ### cloudflared-tunnel ###

  tunnel:
    container_name: cloudflared-tunnel
    image: cloudflare/cloudflared
    restart: unless-stopped
    command: tunnel run
    networks:
      - proxy
    environment:
      - TUNNEL_TOKEN=${TUNNEL_TOKEN}

  ### cloudflare-companion ###

  cloudflare-companion:
    image: ghcr.io/tiredofit/docker-traefik-cloudflare-companion:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      placement:
        constraints:
          - node.role == manager
    environment:
      - TIMEZONE=Europe/Berlin

      - LOG_TYPE=CONSOLE
      - LOG_LEVEL=INFO

      - TRAEFIK_VERSION=2
      - RC_TYPE=CNAME

      - TARGET_DOMAIN=${ROOT_DOMAIN}
      - REFRESH_ENTRIES=TRUE

      - DOCKER_SWARM_MODE=FALSE

      - ENABLE_TRAEFIK_POLL=TRUE
      - TRAEFIK_POLL_URL=https://traefik.${ROOT_DOMAIN}/api
      - TRAEFIK_FILTER_LABEL=traefik.constraint
      - TRAEFIK_FILTER=proxy-public
      - DOMAIN1=${ROOT_DOMAIN}
      - DOMAIN1_ZONE_ID=${ZONE_ID}
      - DOMAIN1_PROXIED=TRUE

      - CF_DNS_API_TOKEN=${CF_DNS_API_TOKEN} 
    restart: always
    networks:
      - internal

  authelia:
    container_name: authelia
    image: docker.io/authelia/authelia:latest
    restart: unless-stopped
    volumes:
      - /etc/docker/authelia:/config
    networks:
      proxy:
    ports:
      - 9091:9091
    environment:
      - TZ=Europe/Berlin
    labels:
      - 'traefik.enable=true'
      - "traefik.http.routers.authelia.entrypoints=http"
      - "traefik.http.routers.authelia.rule=Host(`authelia.mueller-nas.de`)"
      - "traefik.http.middlewares.authelia-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.authelia.middlewares=authelia-https-redirect"
      - "traefik.http.routers.authelia-secure.entrypoints=https"
      - "traefik.http.routers.authelia-secure.rule=Host(`authelia.mueller-nas.de`)"
      - "traefik.http.routers.authelia-secure.tls=true"
      - 'traefik.http.routers.authelia-secure.tls.certresolver=myresolver'
      - "traefik.http.routers.authelia-secure.service=authelia"
      - 'traefik.http.middlewares.authelia.forwardauth.address=http://authelia:9091/api/verify?rd=https://authelia.mueller-nas,de'
      - 'traefik.http.middlewares.authelia.forwardauth.trustForwardHeader=true'
      - 'traefik.http.middlewares.authelia.forwardauth.authResponseHeaders=Remote-User,Remote-Groups,Remote-Name,Remote-Email'
      - "traefik.http.services.authelia.loadbalancer.server.port=9091"
      - "traefik.docker.network=proxy"
networks:
  proxy:
    external: true
  internal: